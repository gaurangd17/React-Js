{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredient","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","price","toFixed","Orders","this","onFetchOrders","token","userId","orderLoading","Spinner","loading","orders","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,2B,kHCmCXC,EAjCD,SAACC,GAEX,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAcF,EAAMC,YACxBA,EAAYE,KACR,CACIC,KAAOF,EACPG,OAASL,EAAMC,YAAYC,KAKvC,IAAMI,EAAmBL,EAAYM,KAAK,SAAAC,GACtC,OAAO,0BACCC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARnB,KAQ2BI,EAAGH,OAR9B,QAWX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,6CAAmBZ,GACnB,uCAAY,uCAAaN,EAAMmB,MAAMC,QAAQ,O,gCCtBnDC,E,kLAQEC,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,U,+BAuBtD,IAAIC,EAAe,kBAACC,EAAA,EAAD,MAanB,OAXIL,KAAKtB,MAAM4B,UACXF,EACIJ,KAAKtB,MAAM6B,OAAOtB,KAAI,SAAAR,GAAK,OACvB,kBAAC,EAAD,CACIgB,IAAKhB,EAAM+B,GACX7B,YAAaF,EAAME,YACnBkB,OAAQpB,EAAMoB,YAM1B,6BACKO,O,GA9CIK,aAmENC,uBAfM,SAAAC,GACjB,MAAM,CACFJ,OAAQI,EAAMlC,MAAM8B,OACpBD,QAASK,EAAMlC,MAAM6B,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAIA,SAAAU,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAI/DO,CAA0CK,YAAiBhB,EAAQiB","file":"static/js/5.71b640ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","import React from 'react'\r\nimport classes from './Order.css'\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = []\r\n\r\n    for(let ingredient in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name : ingredient,\r\n                amount : props.ingredients[ingredient]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map( ig => {\r\n        return <span \r\n                style={{\r\n                    textTransform: 'capitalize',\r\n                    display: 'inline-block',\r\n                    margin: '0 8px',\r\n                    border: '1px solid #ccc',\r\n                    padding: '5px'\r\n                }}\r\n                key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p> Ingredients : {ingredientOutput}</p>\r\n            <p> Price : <strong>INR {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, { Component } from \"react\"\r\nimport {connect} from 'react-redux'\r\n\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component{\r\n\r\n    // state = {\r\n    //     orders : [],\r\n    //     loading : true\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId)\r\n        // axios.get('/orders.json')\r\n        //     .then(res => {\r\n        //         const fetchOrders =[];\r\n        //         for(let key in res.data) {\r\n        //             fetchOrders.push({\r\n        //                 ...res.data[key],\r\n        //                 id: key\r\n        //             })\r\n        //         }\r\n        //         this.setState({\r\n        //             loading:false,\r\n        //             orders:fetchOrders\r\n        //         })\r\n        //     })\r\n        //     .catch(err => {\r\n        //         this.setState({\r\n        //             loading:false\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        let orderLoading = <Spinner></Spinner>\r\n\r\n        if(!this.props.loading){\r\n            orderLoading = (\r\n                this.props.orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={+order.price}>\r\n                    </Order>\r\n                ))\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {orderLoading}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(stateToProps,mapDispatchToProps) (withErrorHandler(Orders, axios));"],"sourceRoot":""}