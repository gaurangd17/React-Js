{"version":3,"sources":["store/actions/actionTypes.js","shared/utitlity.js","hoc/Auxx/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SIdeDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProps","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","aux","props","children","addIngredients","ingredientName","type","actionTypes","removeIngredients","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","url","dipatch","post","id","orederData","name","orderId","err","purchaseInit","fetchOrders","userId","queryParams","res","orders","key","push","fetchOrdersFailed","authSuccess","idToken","localId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","emailId","pass","isSignup","authData","email","password","returnSecureToken","console","log","expirationDate","Date","getTime","expiresIn","setItem","errror","authFail","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","backdrop","show","className","Classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","classes","style","transform","opacity","Component","button","disabled","Button","btnType","join","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptors","interceptors","request","use","req","resInterceptors","eject","message","BurgerIngedient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","prototypes","PropTypes","string","isRequired","burger","tranformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","authenticated","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","Layout","showSideDrawer","SideDrawerCloseHandler","sideDrawerToggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","order","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinue","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","isAUthenticated","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","textAlign","Spinner","onIngredientAdded","onIngredientRemoved","totalPrice","OrderSummary","burgerBuilder","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncAuth","asyncOrders","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","bacon","meat","action","updateIngredient","updatedState","updatedIngredient","updatedStates","setIngredients","reducer","loading","purchased","purchaseBurgerSuccess","newOrderData","authRedirectPath","authStart","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52eb576e.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\r\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED'\r\n\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","export const updateObject = (oldObject, updatedProps) =>{\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProps\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => \r\n{\r\n    let isValid = true\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if(rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if(rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}","const aux = (props) => props.children\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredients = (ingredientName) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT, \r\n        ingredientName: ingredientName\r\n    }\r\n}\r\n\r\nexport const removeIngredients = (ingredientName) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT, \r\n        ingredientName: ingredientName\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-app-49b14.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed())\r\n            })\r\n    }\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orederData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orederData: orederData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (err) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    // console.log('token', token)\r\n    const url = '/orders.json?auth=' + token;\r\n    return dipatch => {\r\n        dipatch(purchaseBurgerStart())\r\n        axios.post(url, orderData)\r\n            .then(response => {\r\n                dipatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dipatch(purchaseBurgerFail(error))\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFailed = (err) => {\r\n    return{\r\n         type: actionTypes.FETCH_ORDERS_FAILED,\r\n         error: err\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchOrders =[];\r\n                for(let key in res.data) {\r\n                    fetchOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFailed(err))\r\n            })\r\n    }\r\n}","import axios from 'axios'\r\n\r\nimport * as actionTypes from './actionTypes'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (idToken, localId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        userId: localId, \r\n        token: idToken\r\n    }\r\n}\r\n\r\nexport const authFail = (err) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        errror: err\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const auth = (emailId, pass, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        \r\n        const authData = {\r\n            email: emailId,\r\n            password: pass,\r\n            returnSecureToken: true\r\n        }; \r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyADqcJ2Kga3SLu51fbcD-XN2a4uMLbA9LE';\r\n\r\n        if(!isSignup){\r\n            url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyADqcJ2Kga3SLu51fbcD-XN2a4uMLbA9LE';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response)\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n                localStorage.setItem('token', response.data.idToken)\r\n                localStorage.setItem('expirationDate', expirationDate)\r\n                localStorage.setItem('userId', response.data.localId)\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId))\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(authFail(err.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token){\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate > new Date()){\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token,userId))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            } else {\r\n                dispatch(logout())\r\n            }\r\n            \r\n\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"HuxZPfsTQk6kf8ScsD35c\",\"BreadTop\":\"_10-cTAWgqIPt0kctF6Bmth\",\"Seeds1\":\"_3xHtzMBSXqXFtyL2Kkf3Gu\",\"Seeds2\":\"_1cUso01mEhPiOvVew6u076\",\"Meat\":\"_13nANrA0F7BA6yWg1cuxyQ\",\"Cheese\":\"_1FxeY1KKtrGNpRoQOfCofJ\",\"Salad\":\"_1iTJEGGLnCbWNIyCGWETEe\",\"Bacon\":\"_3vrAI2Ovef69xUC2be2Tib\"};","import axios from 'axios'\r\n\r\nconst instance  = axios.create({\r\n    baseURL : 'https://react-burger-app-49b14.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\",\"OrderButton\":\"eOHGCuEq1OhPyPCR5zknH\",\"enable\":\"_3uFkIvkg-ZP_ZJFGHH6S_d\"};","import React from 'react'\r\nimport Classes from './Backdrop.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={Classes.Backdrop} onClick={props.clicked}></div> : null\r\n)\r\n\r\nexport default backdrop;","import React, {Component} from 'react'\r\nimport classes from './Modal.css'\r\nimport Aux from '../../../hoc/Auxx/Aux'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component{\r\n    \r\n    shouldComponentUpdate( nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children; \r\n    }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log('Modal.js componentWillUpdate()')\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}></Backdrop>        \r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled} \r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>\r\n            {props.children}\r\n    </button>\r\n)\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_3_01fOopnX44ubS-oaxkTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","import React from 'react'\r\nimport classes from './Spinner.css'\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\nexport default spinner;\r\n\r\n","import React, {Component} from 'react'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport Aux from '../Auxx/Aux'\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error : null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptors = axios.interceptors.request.use(req=> {\r\n                this.setState ({\r\n                    error : null\r\n                })\r\n                return req;\r\n            })\r\n\r\n            this.resInterceptors = axios.interceptors.response.use(response => response, error => {\r\n                this.setState({\r\n                    error : error\r\n                })\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptors);\r\n            axios.interceptors.response.eject(this.resInterceptors);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({\r\n                error : null\r\n            })\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}></WrappedComponent>\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react'\r\nimport classes from './BurgerIngredient.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass BurgerIngedient extends Component{\r\n    render() {\r\n    let ingredient = null;\r\n\r\n    switch(this.props.type) {\r\n        case('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case('bread-top'):\r\n            ingredient = ( \r\n            <div className={classes.BreadTop}>\r\n                <div className={classes.Seeds1}></div>\r\n                <div className={classes.Seeds2}></div>\r\n            </div>\r\n            );\r\n            break;\r\n        case('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient=null;\r\n            break;\r\n    }\r\n\r\n    return ingredient;\r\n    }\r\n} \r\n\r\nBurgerIngedient.prototypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngedient;","import React from 'react'\r\nimport classes from './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = (props) => {\r\n\r\nlet tranformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey}/>;\r\n        })\r\n    })\r\n    .reduce((arr,el) => {\r\n         return arr.concat(el)   \r\n    },[]) \r\n\r\n    // console.log(tranformedIngredients);\r\n\r\n    if(tranformedIngredients.length===0){\r\n        tranformedIngredients=<p>Please start adding ingredients!!!</p>;\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Burger}> \r\n            <BurgerIngredient type='bread-top'/>\r\n            {tranformedIngredients}\r\n            <BurgerIngredient type='bread-bottom'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_3pLYCt_XGv-qW86lAaB4Ex\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_1DDwYTkbvNoVwBDs8ZptVg\",\"load4\":\"_2zf_TGtLpRmUEIwmNbURSr\"};","import React from 'react'\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.css'\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt='MyBurger'></img>\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport classes from './NavigationItem.css'\r\n\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}>{props.children} </NavLink>\r\n    </li>\r\n)\r\n\r\nexport default navigationItem;","import React from 'react'\r\n\r\nimport classes from './NavigationItems.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/' active>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link='/orders'>Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated ? \r\n            <NavigationItem link='/auth'>Authenticate</NavigationItem>:\r\n            <NavigationItem link='/logout'>Logout</NavigationItem>\r\n        }\r\n    </ul>\r\n)\r\n\r\nexport default navigationItems;","import React from 'react'\r\nimport classes from './DrawerToggle.css'\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default drawerToggle;","import React from 'react'\r\n\r\nimport classes from './Toolbar.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.authenticated}></NavigationItems>\r\n        </nav>\r\n    </header>\r\n\r\n);\r\n\r\nexport default toolbar;","import React from 'react'\r\n\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../hoc/Auxx/Aux'\r\n\r\nconst sideDrawer= (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>            \r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.authenticated}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>        \r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Aux from '../Auxx/Aux'\r\nimport classes from './Layout.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SIdeDrawer'\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer : false\r\n    }\r\n\r\n    SideDrawerCloseHandler = () =>{\r\n        this.setState({\r\n            showSideDrawer : false\r\n        })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                showSideDrawer: !prevState.showSideDrawer\r\n            }\r\n        })\r\n    }\r\n\r\n  render(){\r\n    return(\r\n        <Aux>\r\n        <Toolbar\r\n            authenticated={this.props.isAuthenticated} \r\n            drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n        <SideDrawer\r\n            authenticated={this.props.isAuthenticated} \r\n            open={this.state.showSideDrawer}\r\n            closed={this.SideDrawerCloseHandler}/>\r\n        <main className = {classes.Content}>\r\n            {this.props.children}\r\n        </main>\r\n    </Aux>\r\n    )\r\n  }   \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react'\r\nimport classes from './BuildControl.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed}\r\n            disabled={props.disabled}>\r\n        Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>\r\n        More</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControl;","import React from 'react'\r\n\r\nimport classes from './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Meat', type: 'meat'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'}\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price : <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() => props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button \r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.order}>{props.authenticated? 'ORDER NOW' : 'SIGN UP/IN for Order'}</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls;","import React from 'react'\r\nimport Aux from '../../../hoc/Auxx/Aux'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n            .map(igKey => {\r\n            return <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span> : {props.ingredients[igKey]}\r\n                    </li>\r\n            })\r\nreturn (\r\n    <Aux>\r\n        <h3>Your Order</h3>\r\n        <p>A delicious with the following ingredients :  </p>\r\n        <ul>\r\n            {ingredientSummary}\r\n        </ul>\r\n        <p><strong>Total Price : {props.price.toFixed(2)}</strong></p>\r\n        <p>Continue to Checkout?</p>\r\n        <Button btnType='Danger' clicked={props.purchaseCancelled}>CANCEL</Button>\r\n        <Button btnType='Success' clicked={props.purchaseContinue}>CONTINUE</Button>\r\n    </Aux>\r\n)\r\n}\r\n\r\nexport default orderSummary","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Aux from '../../hoc/Auxx/Aux'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\n// import * as actionTypes from '../../store/actions/actionTypes'\r\n\r\nexport class BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        // ingredients : null,\r\n        // totalPrice : 100,\r\n        // purchasable: false,\r\n        purchasing : false,\r\n        // loading : false,\r\n        // error : false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients()\r\n        // axios.get('https://react-burger-app-49b14.firebaseio.com/ingredients.json')\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             ingredients : response.data\r\n        //         })\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({\r\n        //             error :true\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum,el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        // this.setState({purchasable: sum > 0});\r\n        return sum > 0;\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice =  this.state.totalPrice;\r\n    //     const newPrice = priceAddition + oldPrice;\r\n    //     this.setState({\r\n    //         totalPrice:newPrice,\r\n    //         ingredients:updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount - 1;\r\n    //     if(oldCount <= 0){\r\n    //         return\r\n    //     }\r\n\r\n    //     const updatedIngredients = {\r\n    //         ...this.props.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice =  this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({\r\n    //         totalPrice:newPrice,\r\n    //         ingredients:updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAUthenticated){\r\n            this.setState({\r\n                purchasing : true\r\n            })\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth')\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing : false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n    //    const queryParams = [];\r\n    //     for(let i in this.props.ingredients){\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]));\r\n    //     }\r\n    //     queryParams.push('price='+ this.props.totalPrice);\r\n    //     const queryString = queryParams.join('&');\r\n\r\n    //     this.props.history.push({\r\n    //         pathname : '/checkout',\r\n    //         search : '?' + queryString\r\n    //     })\r\n        this.props.onInitPurchase()\r\n        this.props.history.push('/checkout')\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ingredients\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        // if(this.state.loading){\r\n        //     orderSummary = <Spinner/>\r\n        // }\r\n\r\n        let burger = this.props.error ? <p style={{textAlign:\"center\"}}> Ingredients can't be loaded!!!</p> : <Spinner/>\r\n\r\n        if(this.props.ingredients){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ingredients}/>\r\n                    <BuildControls\r\n                        ingredientAdded = {this.props.onIngredientAdded}\r\n                        ingredientRemoved = {this.props.onIngredientRemoved}\r\n                        disabled = {disabledInfo}\r\n                        // purchasable={this.state.purchasable}\r\n                        purchasable = {this.updatePurchaseState(this.props.ingredients)}\r\n                        order={this.purchaseHandler}\r\n                        price={this.props.totalPrice}\r\n                        authenticated={this.props.isAUthenticated}/>\r\n                </Aux>\r\n            )\r\n            orderSummary = <OrderSummary \r\n            ingredients={this.props.ingredients}\r\n            price={this.props.totalPrice}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}/>;\r\n        }\r\n\r\n        // if(this.state.loading){\r\n        //     orderSummary = <Spinner/>\r\n        // }\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal \r\n                    show={this.state.purchasing} \r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAUthenticated: state.auth.token!==null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingredientName) => dispatch(actions.addIngredients(ingredientName)),\r\n            // {type: actionTypes.ADD_INGREDIENT,ingredientName: ingredientName}),\r\n        onIngredientRemoved: (ingredientName) => dispatch(actions.removeIngredients(ingredientName)),\r\n            // {type: actionTypes.REMOVE_INGREDIENT,/ingredientName: ingredientName})\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (withErrorHandler(BurgerBuilder,axios));","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport * as actions from '../../../store/actions/index'\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to='/'></Redirect>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout)","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n        \r\n        render () {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React, {Component} from 'react';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport Layout from './hoc/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/index'\nimport asyncComponent from './hoc/asyncComponent/asyncComponent'\n\nconst asyncCheckout = asyncComponent( () => {\n  return import('./containers/Checkout/Checkout')\n})\n\nconst asyncAuth = asyncComponent( () => {\n  return import('./containers/Auth/Auth')\n})\n\nconst asyncOrders = asyncComponent( () => {\n  return import('./containers/Orders/Orders')\n})\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.onTryAutoSignup()\n  }\n\n  render (){\n    let routes =(\n          <Switch>\n            <Route path='/auth' component={asyncAuth}></Route>\n            <Route path='/' exact component={BurgerBuilder}></Route>\n            <Redirect to='/'/>\n          </Switch>\n    )\n\n    if(this.props.isAuthenticated){\n        routes = (\n          <Switch>\n            <Route path='/checkout' component={asyncCheckout}></Route>\n            <Route path='/orders' component={asyncOrders}></Route>\n            <Route path='/logout' component={Logout}></Route>\n            <Route path='/auth' component={asyncAuth}></Route>\n            <Route path='/' exact component={BurgerBuilder}></Route>\n            <Redirect to='/'/>\n          </Switch>\n          )\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    )\n  } \n}\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated: state.auth.token!==null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../../shared/utitlity'\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 50,\r\n    // loading : false,\r\n    error : false,\r\n    building: false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 50,\r\n    cheese : 30,\r\n    bacon : 150,\r\n    meat : 200\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredients(state,action)\r\n            // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] + 1},totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   }\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredients(state, action)\r\n            // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] - 1},totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]}\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\r\n        // {...state,ingredients: {salad: action.ingredients.salad,meat: action.ingredients.meat,cheese: action.ingredients.cheese,bacon: action.ingredients.bacon},totalPrice: 50,  error: false}\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return updateObject(state,{error: true}) \r\n        // {...state,error: true}\r\n        default: return state \r\n    }\r\n}\r\n\r\nconst addIngredients = (state,action) => {\r\n    const updateIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n    const updateIngredients = updateObject(state.ingredients, updateIngredient)\r\n    const updatedState = {\r\n        ingredients: updateIngredients,\r\n        totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState) \r\n}\r\n\r\nconst removeIngredients = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedStates = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true   \r\n    }\r\n    return updateObject(state, updatedStates) \r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            meat: action.ingredients.meat,\r\n            cheese: action.ingredients.cheese,\r\n            bacon: action.ingredients.bacon},\r\n        totalPrice: 50,  \r\n        error: false,\r\n        building: false\r\n})}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../../shared/utitlity'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action)\r\n            // {...action.orderData,id: action.orderId}\r\n            // {...state,purchased: true,loading: false,orders: state.orders.concat(newOrderData)}\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return updateObject(state,{loading: false})\r\n            // {...state,loading: false}\r\n        case actionTypes.PURCHASE_BURGER_START: return updateObject(state,{loading: true})\r\n            // {...state,loading: true}\r\n        case actionTypes.PURCHASE_INIT: return updateObject(state, {purchased: false})\r\n        // {...state,purchased: false}\r\n        case actionTypes.FETCH_ORDERS_START: return updateObject(state,{loading:true})\r\n        // {...state,loading: true}\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return updateObject(state, {orders: action.orders,\r\n                                                                            loading: false})\r\n        // {...state,orders: action.orders,loading: false}\r\n        case actionTypes.FETCH_ORDERS_FAILED: return updateObject(state,{loading:false})\r\n            // {...state,loading: false}\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrderData = updateObject(action.orderData, {id: action.orderId})\r\n    return updateObject(state,{ purchased: true,\r\n                                loading: false,\r\n                                orders: state.orders.concat(newOrderData)\r\n                                }\r\n                        )\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../../shared/utitlity'\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true})\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {token: action.token, userId: action.userId, error: null, loading: false})\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {error: action.errror, loading: false})\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {token: null, userId: null})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: \r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: \r\n            return setAuthRedirectPath(state,action)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}