{"ast":null,"code":"import _classCallCheck from\"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{connect}from'react-redux';import Order from'../../components/Order/Order';import axios from'../../axios-orders';import withErrorHandler from'../../hoc/withErrorHandler/withErrorHandler';import*as actions from'../../store/actions/index';import Spinner from'../../components/UI/Spinner/Spinner';var Orders=/*#__PURE__*/function(_Component){_inherits(Orders,_Component);var _super=_createSuper(Orders);function Orders(){_classCallCheck(this,Orders);return _super.apply(this,arguments);}_createClass(Orders,[{key:\"componentDidMount\",// state = {\n//     orders : [],\n//     loading : true\n// }\nvalue:function componentDidMount(){this.props.onFetchOrders(this.props.token,this.props.userId);// axios.get('/orders.json')\n//     .then(res => {\n//         const fetchOrders =[];\n//         for(let key in res.data) {\n//             fetchOrders.push({\n//                 ...res.data[key],\n//                 id: key\n//             })\n//         }\n//         this.setState({\n//             loading:false,\n//             orders:fetchOrders\n//         })\n//     })\n//     .catch(err => {\n//         this.setState({\n//             loading:false\n//         })\n//     })\n}},{key:\"render\",value:function render(){var orderLoading=/*#__PURE__*/React.createElement(Spinner,null);if(!this.props.loading){orderLoading=this.props.orders.map(function(order){return/*#__PURE__*/React.createElement(Order,{key:order.id,ingredients:order.ingredients,price:+order.price});});}return/*#__PURE__*/React.createElement(\"div\",null,orderLoading);}}]);return Orders;}(Component);var stateToProps=function stateToProps(state){return{orders:state.order.orders,loading:state.order.loading,token:state.auth.token,userId:state.auth.userId};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onFetchOrders:function onFetchOrders(token,userId){return dispatch(actions.fetchOrders(token,userId));}};};export default connect(stateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","props","onFetchOrders","token","userId","orderLoading","loading","orders","map","order","id","ingredients","price","stateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":"4mBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6CAA7B,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qCAApB,C,GAEMC,CAAAA,M,kOAEF;AACA;AACA;AACA;kCAEoB,CAChB,KAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC,CAA2C,KAAKF,KAAL,CAAWG,MAAtD,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,C,uCAEQ,CACL,GAAIC,CAAAA,YAAY,cAAG,oBAAC,OAAD,MAAnB,CAEA,GAAG,CAAC,KAAKJ,KAAL,CAAWK,OAAf,CAAuB,CACnBD,YAAY,CACR,KAAKJ,KAAL,CAAWM,MAAX,CAAkBC,GAAlB,CAAsB,SAAAC,KAAK,qBACvB,oBAAC,KAAD,EACI,GAAG,CAAEA,KAAK,CAACC,EADf,CAEI,WAAW,CAAED,KAAK,CAACE,WAFvB,CAGI,KAAK,CAAE,CAACF,KAAK,CAACG,KAHlB,EADuB,EAA3B,CADJ,CASH,CACD,mBACI,+BACKP,YADL,CADJ,CAKH,C,oBAjDgBZ,S,EAoDrB,GAAMoB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC1B,MAAM,CACFP,MAAM,CAAEO,KAAK,CAACL,KAAN,CAAYF,MADlB,CAEFD,OAAO,CAAEQ,KAAK,CAACL,KAAN,CAAYH,OAFnB,CAGFH,KAAK,CAAEW,KAAK,CAACC,IAAN,CAAWZ,KAHhB,CAIFC,MAAM,CAAEU,KAAK,CAACC,IAAN,CAAWX,MAJjB,CAAN,CAMH,CAPD,CASA,GAAMY,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHf,aAAa,CAAE,uBAACC,KAAD,CAAQC,MAAR,QAAmBa,CAAAA,QAAQ,CAACnB,OAAO,CAACoB,WAAR,CAAoBf,KAApB,CAA2BC,MAA3B,CAAD,CAA3B,EADZ,CAAP,CAGH,CAJD,CAMA,cAAeV,CAAAA,OAAO,CAACmB,YAAD,CAAcG,kBAAd,CAAP,CAA0CnB,gBAAgB,CAACG,MAAD,CAASJ,KAAT,CAA1D,CAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport {connect} from 'react-redux'\r\n\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component{\r\n\r\n    // state = {\r\n    //     orders : [],\r\n    //     loading : true\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId)\r\n        // axios.get('/orders.json')\r\n        //     .then(res => {\r\n        //         const fetchOrders =[];\r\n        //         for(let key in res.data) {\r\n        //             fetchOrders.push({\r\n        //                 ...res.data[key],\r\n        //                 id: key\r\n        //             })\r\n        //         }\r\n        //         this.setState({\r\n        //             loading:false,\r\n        //             orders:fetchOrders\r\n        //         })\r\n        //     })\r\n        //     .catch(err => {\r\n        //         this.setState({\r\n        //             loading:false\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        let orderLoading = <Spinner></Spinner>\r\n\r\n        if(!this.props.loading){\r\n            orderLoading = (\r\n                this.props.orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={+order.price}>\r\n                    </Order>\r\n                ))\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {orderLoading}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(stateToProps,mapDispatchToProps) (withErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}