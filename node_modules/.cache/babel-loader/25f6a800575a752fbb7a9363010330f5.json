{"ast":null,"code":"import*as actionTypes from'../actions/actionTypes';import{updateObject}from'../../shared/utitlity';var initialState={orders:[],loading:false,purchased:false};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.PURCHASE_BURGER_SUCCESS:return purchaseBurgerSuccess(state,action);// {...action.orderData,id: action.orderId}\n// {...state,purchased: true,loading: false,orders: state.orders.concat(newOrderData)}\ncase actionTypes.PURCHASE_BURGER_FAIL:return updateObject(state,{loading:false});// {...state,loading: false}\ncase actionTypes.PURCHASE_BURGER_START:return updateObject(state,{loading:true});// {...state,loading: true}\ncase actionTypes.PURCHASE_INIT:return updateObject(state,{purchased:false});// {...state,purchased: false}\ncase actionTypes.FETCH_ORDERS_START:return updateObject(state,{loading:true});// {...state,loading: true}\ncase actionTypes.FETCH_ORDERS_SUCCESS:return updateObject(state,{orders:action.orders,loading:false});// {...state,orders: action.orders,loading: false}\ncase actionTypes.FETCH_ORDERS_FAILED:return updateObject(state,{loading:false});// {...state,loading: false}\ndefault:return state;}};var purchaseBurgerSuccess=function purchaseBurgerSuccess(state,action){var newOrderData=updateObject(action.orderData,{id:action.orderId});return updateObject(state,{purchased:true,loading:false,orders:state.orders.concat(newOrderData)});};export default reducer;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_BURGER_SUCCESS","purchaseBurgerSuccess","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED","newOrderData","orderData","id","orderId","concat"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CACA,OAAQC,YAAR,KAA2B,uBAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,MAAM,CAAE,EADS,CAEjBC,OAAO,CAAE,KAFQ,CAGjBC,SAAS,CAAE,KAHM,CAArB,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAgC,IAA/BC,CAAAA,KAA+B,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAC5C,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKT,CAAAA,WAAW,CAACU,uBAAjB,CAA0C,MAAOC,CAAAA,qBAAqB,CAACJ,KAAD,CAAQC,MAAR,CAA5B,CACtC;AACA;AACJ,IAAKR,CAAAA,WAAW,CAACY,oBAAjB,CAAuC,MAAOX,CAAAA,YAAY,CAACM,KAAD,CAAO,CAACH,OAAO,CAAE,KAAV,CAAP,CAAnB,CACnC;AACJ,IAAKJ,CAAAA,WAAW,CAACa,qBAAjB,CAAwC,MAAOZ,CAAAA,YAAY,CAACM,KAAD,CAAO,CAACH,OAAO,CAAE,IAAV,CAAP,CAAnB,CACpC;AACJ,IAAKJ,CAAAA,WAAW,CAACc,aAAjB,CAAgC,MAAOb,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAACF,SAAS,CAAE,KAAZ,CAAR,CAAnB,CAChC;AACA,IAAKL,CAAAA,WAAW,CAACe,kBAAjB,CAAqC,MAAOd,CAAAA,YAAY,CAACM,KAAD,CAAO,CAACH,OAAO,CAAC,IAAT,CAAP,CAAnB,CACrC;AACA,IAAKJ,CAAAA,WAAW,CAACgB,oBAAjB,CAAuC,MAAOf,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAACJ,MAAM,CAAEK,MAAM,CAACL,MAAhB,CACEC,OAAO,CAAE,KADX,CAAR,CAAnB,CAEvC;AACA,IAAKJ,CAAAA,WAAW,CAACiB,mBAAjB,CAAsC,MAAOhB,CAAAA,YAAY,CAACM,KAAD,CAAO,CAACH,OAAO,CAAC,KAAT,CAAP,CAAnB,CAClC;AACJ,QAAS,MAAOG,CAAAA,KAAP,CAjBb,CAmBH,CApBD,CAsBA,GAAMI,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC7C,GAAMU,CAAAA,YAAY,CAAGjB,YAAY,CAACO,MAAM,CAACW,SAAR,CAAmB,CAACC,EAAE,CAAEZ,MAAM,CAACa,OAAZ,CAAnB,CAAjC,CACA,MAAOpB,CAAAA,YAAY,CAACM,KAAD,CAAO,CAAEF,SAAS,CAAE,IAAb,CACED,OAAO,CAAE,KADX,CAEED,MAAM,CAAEI,KAAK,CAACJ,MAAN,CAAamB,MAAb,CAAoBJ,YAApB,CAFV,CAAP,CAAnB,CAKH,CAPD,CASA,cAAeZ,CAAAA,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../../shared/utitlity'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action)\r\n            // {...action.orderData,id: action.orderId}\r\n            // {...state,purchased: true,loading: false,orders: state.orders.concat(newOrderData)}\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return updateObject(state,{loading: false})\r\n            // {...state,loading: false}\r\n        case actionTypes.PURCHASE_BURGER_START: return updateObject(state,{loading: true})\r\n            // {...state,loading: true}\r\n        case actionTypes.PURCHASE_INIT: return updateObject(state, {purchased: false})\r\n        // {...state,purchased: false}\r\n        case actionTypes.FETCH_ORDERS_START: return updateObject(state,{loading:true})\r\n        // {...state,loading: true}\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return updateObject(state, {orders: action.orders,\r\n                                                                            loading: false})\r\n        // {...state,orders: action.orders,loading: false}\r\n        case actionTypes.FETCH_ORDERS_FAILED: return updateObject(state,{loading:false})\r\n            // {...state,loading: false}\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrderData = updateObject(action.orderData, {id: action.orderId})\r\n    return updateObject(state,{ purchased: true,\r\n                                loading: false,\r\n                                orders: state.orders.concat(newOrderData)\r\n                                }\r\n                        )\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}