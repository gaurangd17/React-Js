{"ast":null,"code":"import { takeEvery, all, takeLatest } from 'redux-saga/effects';\nimport { logoutSaga, checkAuthTimeoutSaga, authUserSaga, authCheckStateSaga } from './auth';\nimport * as actionTypes from '../actions/actionTypes';\nimport { initIngredientsSaga } from './burgerBuilder';\nimport { purchaseBurgerSaga, fetchOrdersSaga } from './order';\nexport function* watchAuth() {\n  yield all([takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, logoutSaga), takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga), takeEvery(actionTypes.AUTH_USER, authUserSaga), takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga)]);\n}\nexport function* watchBurgerBuilder() {\n  yield takeEvery(actionTypes.INIT_INGREDIENTS, initIngredientsSaga);\n}\nexport function* watchOrder() {\n  yield takeLatest(actionTypes.PURCHASE_BURGER, purchaseBurgerSaga);\n  yield takeEvery(actionTypes.FETCH_ORDERS, fetchOrdersSaga);\n}","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/sagas/index.js"],"names":["takeEvery","all","takeLatest","logoutSaga","checkAuthTimeoutSaga","authUserSaga","authCheckStateSaga","actionTypes","initIngredientsSaga","purchaseBurgerSaga","fetchOrdersSaga","watchAuth","AUTH_INITIATE_LOGOUT","AUTH_CHECK_TIMEOUT","AUTH_USER","AUTH_CHECK_STATE","watchBurgerBuilder","INIT_INGREDIENTS","watchOrder","PURCHASE_BURGER","FETCH_ORDERS"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SACIC,UADJ,EAEIC,oBAFJ,EAGIC,YAHJ,EAIIC,kBAJJ,QAKO,QALP;AAMA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,mBAAR,QAAkC,iBAAlC;AACA,SACIC,kBADJ,EAEIC,eAFJ,QAGO,SAHP;AAKA,OAAQ,UAAUC,SAAV,GAAsB;AAC1B,QAAMV,GAAG,CAAE,CACPD,SAAS,CAACO,WAAW,CAACK,oBAAb,EAAmCT,UAAnC,CADF,EAEPH,SAAS,CAACO,WAAW,CAACM,kBAAb,EAAiCT,oBAAjC,CAFF,EAGPJ,SAAS,CAACO,WAAW,CAACO,SAAb,EAAwBT,YAAxB,CAHF,EAIPL,SAAS,CAACO,WAAW,CAACQ,gBAAb,EAA+BT,kBAA/B,CAJF,CAAF,CAAT;AAMH;AAED,OAAQ,UAAUU,kBAAV,GAA+B;AACnC,QAAMhB,SAAS,CAACO,WAAW,CAACU,gBAAb,EAA+BT,mBAA/B,CAAf;AACH;AAED,OAAQ,UAAUU,UAAV,GAAuB;AAC3B,QAAMhB,UAAU,CAACK,WAAW,CAACY,eAAb,EAA8BV,kBAA9B,CAAhB;AACA,QAAMT,SAAS,CAACO,WAAW,CAACa,YAAb,EAA2BV,eAA3B,CAAf;AACH","sourcesContent":["import { takeEvery, all, takeLatest } from 'redux-saga/effects'\r\n\r\nimport { \r\n    logoutSaga, \r\n    checkAuthTimeoutSaga, \r\n    authUserSaga, \r\n    authCheckStateSaga \r\n} from './auth'\r\nimport * as actionTypes from '../actions/actionTypes'\r\nimport {initIngredientsSaga} from './burgerBuilder'\r\nimport {\r\n    purchaseBurgerSaga, \r\n    fetchOrdersSaga\r\n} from './order'\r\n\r\nexport  function* watchAuth() {\r\n    yield all ([\r\n        takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, logoutSaga),\r\n        takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga),\r\n        takeEvery(actionTypes.AUTH_USER, authUserSaga),\r\n        takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga)\r\n    ])\r\n}\r\n\r\nexport  function* watchBurgerBuilder() {\r\n    yield takeEvery(actionTypes.INIT_INGREDIENTS, initIngredientsSaga)\r\n}\r\n\r\nexport  function* watchOrder() {\r\n    yield takeLatest(actionTypes.PURCHASE_BURGER, purchaseBurgerSaga)\r\n    yield takeEvery(actionTypes.FETCH_ORDERS, fetchOrdersSaga)\r\n}"]},"metadata":{},"sourceType":"module"}