{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport axios from '../../axios-orders';\nimport * as actions from '../actions/index';\nexport function* purchaseBurgerSaga(action) {\n  const url = '/orders.json?auth=' + action.token;\n  yield put(actions.purchaseBurgerStart());\n\n  try {\n    const response = yield axios.post(url, action.orderData);\n    yield put(actions.purchaseBurgerSuccess(response.data.name, action.orderData));\n  } catch (error) {\n    yield put(actions.purchaseBurgerFail(error));\n  }\n}\nexport function* fetchOrdersSaga(action) {\n  yield put(actions.fetchOrdersStart());\n  const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\n\n  try {\n    const res = yield axios.get('/orders.json' + queryParams);\n    const fetchOrders = [];\n\n    for (let key in res.data) {\n      fetchOrders.push({ ...res.data[key],\n        id: key\n      });\n    }\n\n    yield put(actions.fetchOrdersSuccess(fetchOrders));\n  } catch (error) {\n    yield put(actions.fetchOrdersFailed(error));\n  }\n}","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/sagas/order.js"],"names":["put","axios","actions","purchaseBurgerSaga","action","url","token","purchaseBurgerStart","response","post","orderData","purchaseBurgerSuccess","data","name","error","purchaseBurgerFail","fetchOrdersSaga","fetchOrdersStart","queryParams","userId","res","get","fetchOrders","key","push","id","fetchOrdersSuccess","fetchOrdersFailed"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAO,UAAUC,kBAAV,CAA6BC,MAA7B,EAAoC;AACvC,QAAMC,GAAG,GAAG,uBAAuBD,MAAM,CAACE,KAA1C;AACA,QAAMN,GAAG,CAACE,OAAO,CAACK,mBAAR,EAAD,CAAT;;AACA,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWJ,GAAX,EAAgBD,MAAM,CAACM,SAAvB,CAAvB;AACA,UAAMV,GAAG,CAACE,OAAO,CAACS,qBAAR,CAA8BH,QAAQ,CAACI,IAAT,CAAcC,IAA5C,EAAkDT,MAAM,CAACM,SAAzD,CAAD,CAAT;AACH,GAHD,CAGC,OAAMI,KAAN,EAAY;AACT,UAAMd,GAAG,CAACE,OAAO,CAACa,kBAAR,CAA2BD,KAA3B,CAAD,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,eAAV,CAA0BZ,MAA1B,EAAiC;AACpC,QAAMJ,GAAG,CAACE,OAAO,CAACe,gBAAR,EAAD,CAAT;AACA,QAAMC,WAAW,GAAG,WAAWd,MAAM,CAACE,KAAlB,GAA0B,6BAA1B,GAA0DF,MAAM,CAACe,MAAjE,GAA0E,GAA9F;;AACA,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,iBAAiBH,WAA3B,CAAlB;AACA,UAAMI,WAAW,GAAE,EAAnB;;AACA,SAAI,IAAIC,GAAR,IAAeH,GAAG,CAACR,IAAnB,EAAyB;AACrBU,MAAAA,WAAW,CAACE,IAAZ,CAAiB,EACb,GAAGJ,GAAG,CAACR,IAAJ,CAASW,GAAT,CADU;AAEbE,QAAAA,EAAE,EAAEF;AAFS,OAAjB;AAIH;;AACD,UAAMvB,GAAG,CAACE,OAAO,CAACwB,kBAAR,CAA2BJ,WAA3B,CAAD,CAAT;AACH,GAVD,CAUC,OAAMR,KAAN,EAAY;AACT,UAAMd,GAAG,CAACE,OAAO,CAACyB,iBAAR,CAA0Bb,KAA1B,CAAD,CAAT;AACH;AACJ","sourcesContent":["import {put} from 'redux-saga/effects'\r\n\r\nimport axios from '../../axios-orders'\r\nimport * as actions from '../actions/index'\r\n\r\nexport function* purchaseBurgerSaga(action){\r\n    const url = '/orders.json?auth=' + action.token;\r\n    yield put(actions.purchaseBurgerStart())\r\n    try{\r\n        const response = yield axios.post(url, action.orderData)\r\n        yield put(actions.purchaseBurgerSuccess(response.data.name, action.orderData))\r\n    }catch(error){\r\n        yield put(actions.purchaseBurgerFail(error))\r\n    }\r\n}\r\n\r\nexport function* fetchOrdersSaga(action){\r\n    yield put(actions.fetchOrdersStart())\r\n    const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"'\r\n    try{\r\n        const res = yield axios.get('/orders.json' + queryParams)\r\n        const fetchOrders =[];\r\n        for(let key in res.data) {\r\n            fetchOrders.push({\r\n                ...res.data[key],\r\n                id: key\r\n            })\r\n        }\r\n        yield put(actions.fetchOrdersSuccess(fetchOrders))\r\n    }catch(error){\r\n        yield put(actions.fetchOrdersFailed(error))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}