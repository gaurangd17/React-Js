{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Zip Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your E-mail'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = () => {\n      this.setState({\n        loading: true\n      }); //alert('You Continue!!!')\n\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: 'Gaurang Deshmukh',\n          address: {\n            home: 'abc',\n            street: 'def',\n            area: 'hinjawadi',\n            pin: '411057',\n            city: 'Pune',\n            state: 'Maharashtra',\n            country: 'India'\n          },\n          email: 'yuh@yuh.com'\n        },\n        takeAway: true\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        console.log(response);\n        this.props.history.push('/');\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updateOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...updateOrderForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n    };\n  }\n\n  render() {\n    const formElementArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, formElementArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      price: formElement.config.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"ORDER\"));\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Enter your Contact Data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","orderHandler","setState","order","ingredients","props","price","customer","address","home","area","pin","city","takeAway","post","then","response","console","log","history","push","catch","error","inputChangedHandler","event","inputIdentifier","updateOrderForm","updatedFormElement","target","render","formElementArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './ContactData.css'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport Input from '../../../components/UI/Input/Input'\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm : {\r\n            name : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Your Name'\r\n                },\r\n                value : ''\r\n            },\r\n            street : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Street'\r\n                },\r\n                value : ''\r\n            },\r\n            zipCode : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Zip Code'\r\n                },\r\n                value : ''\r\n            },\r\n            country : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Country'\r\n                },\r\n                value : ''\r\n            },\r\n            email : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'email',\r\n                    placeholder : 'Your E-mail'\r\n                },\r\n                value : ''\r\n            },\r\n            deliveryMethod : {\r\n                elementType : 'select',\r\n                elementConfig : {\r\n                    options : [\r\n                        {value : 'fastest', displayValue: 'Fastest'},\r\n                        {value : 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value : ''\r\n            }           \r\n        },        \r\n        loading: false\r\n    }\r\n\r\n    orderHandler = () => {\r\n         this.setState({\r\n            loading:true\r\n        })\r\n\r\n        //alert('You Continue!!!')\r\n        const order = {\r\n            ingredients : this.props.ingredients,\r\n            price : this.props.price,\r\n            customer : {\r\n                name : 'Gaurang Deshmukh',\r\n                address : {\r\n                    home : 'abc',\r\n                    street : 'def',\r\n                    area : 'hinjawadi',\r\n                    pin : '411057',\r\n                    city : 'Pune',\r\n                    state : 'Maharashtra',\r\n                    country : 'India'\r\n                },\r\n                email : 'yuh@yuh.com',\r\n            },\r\n            takeAway : true\r\n        }\r\n\r\n        axios.post('/orders.json',order)\r\n            .then(response => {\r\n                this.setState({\r\n                    loading : false\r\n                })\r\n                console.log(response);\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    loading : false\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updateOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const updatedFormElement = {\r\n            ...updateOrderForm[inputIdentifier]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n    }\r\n    \r\n\r\n    render(){\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id:key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form>\r\n                {formElementArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id} \r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        price={formElement.config.value}\r\n                    />\r\n                ))}\r\n                <Button btnType='Success' clicked={this.orderHandler}>ORDER</Button> \r\n            </form>\r\n        );\r\n\r\n        if(this.state.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactData"]},"metadata":{},"sourceType":"module"}