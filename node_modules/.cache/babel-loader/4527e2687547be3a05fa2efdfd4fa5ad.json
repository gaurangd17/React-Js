{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\containers\\\\Checkout\\\\Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSUmmary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinuedHandler = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  // componentWillMount(){\n  //     const query = new URLSearchParams(this.props.location.search);\n  //     const ingredients = {};\n  //     let price = 0;\n  //     for(let param of query.entries()){\n  //         // ['salad', '1']\n  //         if(param[0]==='price'){\n  //             price = param[1]\n  //         } else {\n  //             ingredients[param[0]] = +param[1];\n  //         }               \n  //     }\n  //     this.setState({\n  //         ingredients : ingredients,\n  //         totalPrice : price\n  //     })\n  // }\n  render() {\n    let summary = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    });\n\n    if (this.props.ingredients) {\n      const purchasedRedirect = this.props.purchased ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 61\n        }\n      }) : null;\n      summary = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, purchasedRedirect, /*#__PURE__*/React.createElement(CheckoutSUmmary, {\n        ingredients: this.props.ingredients,\n        checkoutCancelled: this.checkoutCancelledHandler,\n        checkoutContinued: this.checkoutContinuedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: this.props.match.path + '/contact-data' // render={(props) => (<ContactData \n        //                     ingredients={this.props.ingredients}\n        //                     price={this.state.totalPrice}\n        //                     {...props}></ContactData>)}\n        ,\n        component: ContactData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return summary;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","Redirect","connect","CheckoutSUmmary","ContactData","Checkout","checkoutCancelledHandler","props","history","goBack","checkoutContinuedHandler","replace","render","summary","ingredients","purchasedRedirect","purchased","match","path","mapStateToProps","state","burgerBuilder","order"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAO7BO,wBAP6B,GAOF,MAAM;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KAT4B;;AAAA,SAW7BC,wBAX6B,GAWF,MAAM;AAC7B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KAb4B;AAAA;;AAe7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAE;AACJ,QAAIC,OAAO,gBAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AACA,QAAG,KAAKN,KAAL,CAAWO,WAAd,EAA0B;AACtB,YAAMC,iBAAiB,GAAE,KAAKR,KAAL,CAAWS,SAAX,gBAAuB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAA4C,IAArE;AACAH,MAAAA,OAAO,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,iBADL,eAEI,oBAAC,eAAD;AACI,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWO,WAD5B;AAEI,QAAA,iBAAiB,EAAE,KAAKR,wBAF5B;AAGI,QAAA,iBAAiB,EAAE,KAAKI,wBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAMI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWU,KAAX,CAAiBC,IAAjB,GAAwB,eAArC,CACI;AACA;AACA;AACA;AAJJ;AAKI,QAAA,SAAS,EAAEd,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAeH;;AACD,WAAOS,OAAP;AACH;;AAvD4B;;AA0DjC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,WAAW,EAAEM,KAAK,CAACC,aAAN,CAAoBP,WAD9B;AAEHE,IAAAA,SAAS,EAAEI,KAAK,CAACE,KAAN,CAAYN;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAed,OAAO,CAACiB,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport CheckoutSUmmary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from './ContactData/ContactData'\r\n\r\nclass Checkout extends Component {\r\n\r\n    // state = {\r\n    //     ingredients : null,\r\n    //     totalPrice : 0\r\n    // }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n    \r\n    // componentWillMount(){\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients = {};\r\n    //     let price = 0;\r\n\r\n    //     for(let param of query.entries()){\r\n    //         // ['salad', '1']\r\n    //         if(param[0]==='price'){\r\n    //             price = param[1]\r\n    //         } else {\r\n    //             ingredients[param[0]] = +param[1];\r\n    //         }               \r\n    //     }\r\n    //     this.setState({\r\n    //         ingredients : ingredients,\r\n    //         totalPrice : price\r\n    //     })\r\n    // }\r\n\r\n    render(){\r\n        let summary = <Redirect to='/'></Redirect>\r\n        if(this.props.ingredients){\r\n            const purchasedRedirect= this.props.purchased ? <Redirect to='/'/> : null\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSUmmary \r\n                        ingredients={this.props.ingredients}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler}></CheckoutSUmmary>\r\n                    <Route path={this.props.match.path + '/contact-data'} \r\n                        // render={(props) => (<ContactData \r\n                        //                     ingredients={this.props.ingredients}\r\n                        //                     price={this.state.totalPrice}\r\n                        //                     {...props}></ContactData>)}\r\n                        component={ContactData}/>\r\n                </div>\r\n            )\r\n        }\r\n        return summary\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);"]},"metadata":{},"sourceType":"module"}