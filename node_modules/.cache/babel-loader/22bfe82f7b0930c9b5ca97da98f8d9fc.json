{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport { object } from 'prop-types';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 50,\n  cheese: 30,\n  bacon: 150,\n  meat: 200\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 100,\n      purchasable: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = priceAddition + oldPrice;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","object","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceDeduction","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Aux from '../../hoc/Aux'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport { object } from 'prop-types'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 50,\r\n    cheese : 30,\r\n    bacon : 150,\r\n    meat : 200\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients : {\r\n            salad : 0,\r\n            bacon : 0,\r\n            cheese : 0,\r\n            meat : 0\r\n        },\r\n        totalPrice : 100,\r\n        purchasable: false\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum,el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice =  this.state.totalPrice;\r\n        const newPrice = priceAddition + oldPrice;\r\n        this.setState({\r\n            totalPrice:newPrice,\r\n            ingredients:updatedIngredients\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount - 1;\r\n        if(oldCount <= 0){\r\n            return\r\n        }\r\n\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice =  this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            totalPrice:newPrice,\r\n            ingredients:updatedIngredients\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal>\r\n                    <OrderSummary ingredients={this.state.ingredients}></OrderSummary>\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls\r\n                    ingredientAdded = {this.addIngredientHandler}\r\n                    ingredientRemoved = {this.removeIngredientHandler}\r\n                    disabled = {disabledInfo}\r\n                    purchasable={this.state.purchasable}\r\n                    price={this.state.totalPrice}/>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}