{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrderData = { ...action.orderData,\n        id: action.orderId\n      };\n      return { ...state,\n        purchased: true,\n        loading: false,\n        orders: state.orders.concat(newOrderData)\n      };\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return { ...state,\n        loading: false\n      };\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.PURCHASE_INIT:\n      return { ...state,\n        purchased: false\n      };\n\n    case actionTypes.FETCH_ORDERS_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return { ...state,\n        orders: action.orders,\n        loading: false\n      };\n\n    case actionTypes.FETCH_ORDERS_FAILED:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/reducers/order.js"],"names":["actionTypes","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_BURGER_SUCCESS","newOrderData","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAW,CAACS,uBAAjB;AACI,YAAMC,YAAY,GAAG,EACjB,GAAGH,MAAM,CAACI,SADO;AAEjBC,QAAAA,EAAE,EAAEL,MAAM,CAACM;AAFM,OAArB;AAIA,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,SAAS,EAAE,IAFR;AAGHD,QAAAA,OAAO,EAAE,KAHN;AAIHD,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaY,MAAb,CAAoBJ,YAApB;AAJL,OAAP;;AAMJ,SAAKV,WAAW,CAACe,oBAAjB;AACI,aAAM,EACF,GAAGT,KADD;AAEFH,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAIJ,SAAKH,WAAW,CAACgB,qBAAjB;AACI,aAAM,EACF,GAAGV,KADD;AAEFH,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAIJ,SAAKH,WAAW,CAACiB,aAAjB;AACI,aAAM,EACF,GAAGX,KADD;AAEFF,QAAAA,SAAS,EAAE;AAFT,OAAN;;AAIJ,SAAKJ,WAAW,CAACkB,kBAAjB;AACI,aAAM,EACF,GAAGZ,KADD;AAEFH,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAIJ,SAAKH,WAAW,CAACmB,oBAAjB;AACI,aAAM,EACF,GAAGb,KADD;AAEFJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAFb;AAGFC,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKH,WAAW,CAACoB,mBAAjB;AACI,aAAM,EACF,GAAGd;AADD,OAAN;;AAIJ;AACI,aAAOA,KAAP;AA5CR;AA8CH,CA/CD;;AAiDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrderData = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            return {\r\n                ...state,\r\n                purchased: true,\r\n                loading: false,\r\n                orders: state.orders.concat(newOrderData)\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_FAIL: \r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_START: \r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PURCHASE_INIT: \r\n            return{\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: \r\n            return{\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAILED:\r\n            return{\r\n                ...state,\r\n                \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}