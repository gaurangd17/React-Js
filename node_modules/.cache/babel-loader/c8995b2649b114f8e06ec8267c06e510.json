{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Auth.css';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Mail address'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedOrderForm = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName]\n        }\n      };\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementArray = [];\n\n    for (let key in this.state.controls) {\n      formElementArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    const form = formElementArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      price: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }\n    }, form, /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 22\n      }\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","classes","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","inputChangedHandler","event","controlName","updatedOrderForm","checkValidity","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","render","formElementArray","key","push","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport classes from './Auth.css'\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'email',\r\n                    placeholder : 'Mail address'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'password',\r\n                    placeholder : 'Password'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n\r\n    checkValidity(value, rules){\r\n        let isValid = true\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.controls){\r\n            formElementArray.push({\r\n                id:key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        const form = formElementArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id} \r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                price={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event,formElement.id)}/>\r\n        ))\r\n\r\n        return(\r\n            <div className={classes.Auth}>\r\n                 <form>\r\n                     {form}\r\n                     <Button btnType='Success'>SUBMIT</Button>\r\n                 </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}