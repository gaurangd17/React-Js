{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport '../utitlity';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 50,\n  // loading : false,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 50,\n  cheese: 30,\n  bacon: 150,\n  meat: 200\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          meat: action.ingredients.meat,\n          cheese: action.ingredients.cheese,\n          bacon: action.ingredients.bacon\n        },\n        totalPrice: 50,\n        error: false\n      };\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","bacon","meat","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAe,aAAf;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjB;AACAC,EAAAA,KAAK,EAAG;AAJS,CAArB;AAOA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAG,EADc;AAEtBC,EAAAA,MAAM,EAAG,EAFa;AAGtBC,EAAAA,KAAK,EAAG,GAHc;AAItBC,EAAAA,IAAI,EAAG;AAJe,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHT,QAAAA,WAAW,EAAG,EACV,GAAGS,KAAK,CAACT,WADC;AAEV,WAACU,MAAM,CAACG,cAAR,GAA0BJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAF3D,SAFX;AAMHZ,QAAAA,UAAU,EAAGQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AAN9C,OAAP;;AAQJ,SAAKf,WAAW,CAACgB,iBAAjB;AACI,aAAO,EACH,GAAGL,KADA;AAEHT,QAAAA,WAAW,EAAG,EACV,GAAGS,KAAK,CAACT,WADC;AAEV,WAACU,MAAM,CAACG,cAAR,GAA0BJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAF3D,SAFX;AAMHZ,QAAAA,UAAU,EAAGQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AAN9C,OAAP;;AAQJ,SAAKf,WAAW,CAACiB,eAAjB;AACI,aAAO,EACH,GAAGN,KADA;AAEHT,QAAAA,WAAW,EAAE;AACTI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADjB;AAETG,UAAAA,IAAI,EAAEG,MAAM,CAACV,WAAP,CAAmBO,IAFhB;AAGTF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHlB;AAITC,UAAAA,KAAK,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJjB,SAFV;AAQHL,QAAAA,UAAU,EAAE,EART;AASHC,QAAAA,KAAK,EAAE;AATJ,OAAP;;AAWJ,SAAKJ,WAAW,CAACkB,wBAAjB;AACI,aAAO,EACH,GAAGP,KADA;AAEHP,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ;AACI,aAAOO,KAAP;AArCR;AAuCH,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\r\nimport {} from '../utitlity'\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 50,\r\n    // loading : false,\r\n    error : false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 50,\r\n    cheese : 30,\r\n    bacon : 150,\r\n    meat : 200\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT : \r\n            return {\r\n                ...state,\r\n                ingredients : {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   \r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT :\r\n            return {\r\n                ...state, \r\n                ingredients : {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionTypes.SET_INGREDIENTS :\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    meat: action.ingredients.meat,\r\n                    cheese: action.ingredients.cheese,\r\n                    bacon: action.ingredients.bacon\r\n                },\r\n                totalPrice: 50,  \r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED : \r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default : \r\n            return state \r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}