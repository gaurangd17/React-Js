{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport { watchAuth, watchBurgerBuilder } from './store/sagas/index';\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, sagaMiddleware)));\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchBurgerBuilder);\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n})));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, app), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","createStore","applyMiddleware","compose","combineReducers","thunk","createSagaMiddleware","App","serviceWorker","burgerBuilderReducer","orderReducer","authReducer","watchAuth","watchBurgerBuilder","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","burgerBuilder","order","auth","sagaMiddleware","store","run","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,qBAA9C;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,QAAQhB,OAAxH;AAEA,MAAMiB,WAAW,GAAGhB,eAAe,CAAC;AAClCiB,EAAAA,aAAa,EAAEZ,oBADmB;AAElCa,EAAAA,KAAK,EAAEZ,YAF2B;AAGlCa,EAAAA,IAAI,EAAEZ;AAH4B,CAAD,CAAnC;AAMA,MAAMa,cAAc,GAAGlB,oBAAoB,EAA3C;AAEA,MAAMmB,KAAK,GAAGxB,WAAW,CAACmB,WAAD,EACTN,gBAAgB,CAACZ,eAAe,CAACG,KAAD,EAAQmB,cAAR,CAAhB,CADP,CAAzB;AAKAA,cAAc,CAACE,GAAf,CAAmBd,SAAnB;AACAY,cAAc,CAACE,GAAf,CAAmBb,kBAAnB;AAEA,MAAMc,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF;AAQA3B,QAAQ,CAAC8B,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,GADH,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\nimport { watchAuth, watchBurgerBuilder } from './store/sagas/index'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducer, \n                composeEnhancers(applyMiddleware(thunk, sagaMiddleware)\n                )\n              )\n\nsagaMiddleware.run(watchAuth)\nsagaMiddleware.run(watchBurgerBuilder)\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}