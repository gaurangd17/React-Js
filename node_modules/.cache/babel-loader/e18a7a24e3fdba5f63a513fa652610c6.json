{"ast":null,"code":"import _objectSpread from\"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./actionTypes';import axios from'../../axios-orders';export var purchaseBurgerSuccess=function purchaseBurgerSuccess(id,orederData){return{type:actionTypes.PURCHASE_BURGER_SUCCESS,orderId:id,orederData:orederData};};export var purchaseBurgerFail=function purchaseBurgerFail(err){return{type:actionTypes.PURCHASE_BURGER_FAIL,error:err};};export var purchaseBurgerStart=function purchaseBurgerStart(){return{type:actionTypes.PURCHASE_BURGER_START};};export var purchaseBurger=function purchaseBurger(orderData,token){// console.log('token', token)\nvar url='/orders.json?auth='+token;return function(dipatch){dipatch(purchaseBurgerStart());axios.post(url,orderData).then(function(response){dipatch(purchaseBurgerSuccess(response.data.name,orderData));}).catch(function(error){dipatch(purchaseBurgerFail(error));});};};export var purchaseInit=function purchaseInit(){return{type:actionTypes.PURCHASE_INIT};};export var fetchOrdersSuccess=function fetchOrdersSuccess(orders){return{type:actionTypes.FETCH_ORDERS_SUCCESS,orders:orders};};export var fetchOrdersFailed=function fetchOrdersFailed(err){return{type:actionTypes.FETCH_ORDERS_FAILED,error:err};};export var fetchOrdersStart=function fetchOrdersStart(){return{type:actionTypes.FETCH_ORDERS_START};};export var fetchOrders=function fetchOrders(token,userId){return function(dispatch){dispatch(fetchOrdersStart());var queryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';axios.get('/orders.json'+queryParams).then(function(res){var fetchOrders=[];for(var key in res.data){fetchOrders.push(_objectSpread({},res.data[key],{id:key}));}dispatch(fetchOrdersSuccess(fetchOrders));}).catch(function(err){dispatch(fetchOrdersFailed(err));});};};","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orederData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","err","PURCHASE_BURGER_FAIL","error","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","orderData","token","url","dipatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFailed","FETCH_ORDERS_FAILED","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","dispatch","queryParams","get","res","key","push"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orederData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orederData: orederData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (err) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    // console.log('token', token)\r\n    const url = '/orders.json?auth=' + token;\r\n    return dipatch => {\r\n        dipatch(purchaseBurgerStart())\r\n        axios.post(url, orderData)\r\n            .then(response => {\r\n                dipatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dipatch(purchaseBurgerFail(error))\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFailed = (err) => {\r\n    return{\r\n         type: actionTypes.FETCH_ORDERS_FAILED,\r\n         error: err\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchOrders =[];\r\n                for(let key in res.data) {\r\n                    fetchOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFailed(err))\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}