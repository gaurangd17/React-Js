{"ast":null,"code":"import _objectSpread from\"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";export var updateObject=function updateObject(oldObject,updatedProps){return _objectSpread({},oldObject,{},updatedProps);};export var checkValidity=function checkValidity(value,rules){var isValid=true;if(rules.required){isValid=value.trim()!==''&&isValid;}if(rules.minLength){isValid=value.length>=rules.minLength&&isValid;}if(rules.maxLength){isValid=value.length<=rules.maxLength&&isValid;}if(rules.isEmail){var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=pattern.test(value)&&isValid;}if(rules.isNumeric){var _pattern=/^\\d+$/;isValid=_pattern.test(value)&&isValid;}return isValid;};","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/shared/utitlity.js"],"names":["updateObject","oldObject","updatedProps","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":"8JAAA,MAAO,IAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,SAAD,CAAYC,YAAZ,CAA4B,CACpD,wBACOD,SADP,IAEOC,YAFP,EAIH,CALM,CAOP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,KAAR,CAC7B,CACI,GAAIC,CAAAA,OAAO,CAAG,IAAd,CAEA,GAAGD,KAAK,CAACE,QAAT,CAAkB,CACdD,OAAO,CAAGF,KAAK,CAACI,IAAN,KAAiB,EAAjB,EAAuBF,OAAjC,CACH,CAED,GAAGD,KAAK,CAACI,SAAT,CAAoB,CAChBH,OAAO,CAAGF,KAAK,CAACM,MAAN,EAAgBL,KAAK,CAACI,SAAtB,EAAmCH,OAA7C,CACH,CAED,GAAGD,KAAK,CAACM,SAAT,CAAoB,CAChBL,OAAO,CAAGF,KAAK,CAACM,MAAN,EAAgBL,KAAK,CAACM,SAAtB,EAAmCL,OAA7C,CACH,CAED,GAAID,KAAK,CAACO,OAAV,CAAmB,CACf,GAAMC,CAAAA,OAAO,CAAG,uIAAhB,CACAP,OAAO,CAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,GAAuBE,OAAjC,CACH,CAED,GAAID,KAAK,CAACU,SAAV,CAAqB,CACjB,GAAMF,CAAAA,QAAO,CAAG,OAAhB,CACAP,OAAO,CAAGO,QAAO,CAACC,IAAR,CAAaV,KAAb,GAAuBE,OAAjC,CACH,CAED,MAAOA,CAAAA,OAAP,CACH,CA3BM","sourcesContent":["export const updateObject = (oldObject, updatedProps) =>{\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProps\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => \r\n{\r\n    let isValid = true\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if(rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if(rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}"]},"metadata":{},"sourceType":"module"}