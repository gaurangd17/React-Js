{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utitlity';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 50,\n  // loading : false,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 50,\n  cheese: 30,\n  bacon: 150,\n  meat: 200\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updateIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n      };\n      const updateIngredients = updateObject(state.ingredients, updateIngredient);\n      const updatedState = {\n        ingredients: updateIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedState);\n    // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] + 1},totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   }\n\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n      };\n      const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      const updatedStates = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedStates);\n    // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] - 1},totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]}\n\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          meat: action.ingredients.meat,\n          cheese: action.ingredients.cheese,\n          bacon: action.ingredients.bacon\n        },\n        totalPrice: 50,\n        error: false\n      });\n    // {...state,ingredients: {salad: action.ingredients.salad,meat: action.ingredients.meat,cheese: action.ingredients.cheese,bacon: action.ingredients.bacon},totalPrice: 50,  error: false}\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n    // {...state,error: true}\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","bacon","meat","reducer","state","action","type","ADD_INGREDIENT","updateIngredient","ingredientName","updateIngredients","updatedState","REMOVE_INGREDIENT","updatedIngredient","updatedIngredients","updatedStates","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,aAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjB;AACAC,EAAAA,KAAK,EAAG;AAJS,CAArB;AAOA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAG,EADc;AAEtBC,EAAAA,MAAM,EAAG,EAFa;AAGtBC,EAAAA,KAAK,EAAG,GAHc;AAItBC,EAAAA,IAAI,EAAG;AAJe,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,WAAW,CAACe,cAAjB;AACI,YAAMC,gBAAgB,GAAG;AAAC,SAACH,MAAM,CAACI,cAAR,GAA0BL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C;AAAtE,OAAzB;AACA,YAAMC,iBAAiB,GAAGjB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBa,gBAApB,CAAtC;AACA,YAAMG,YAAY,GAAG;AACjBhB,QAAAA,WAAW,EAAEe,iBADI;AAEjBd,QAAAA,UAAU,EAAGQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAFhC,OAArB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAQO,YAAR,CAAnB;AACA;;AACJ,SAAKnB,WAAW,CAACoB,iBAAjB;AACI,YAAMC,iBAAiB,GAAG;AAAC,SAACR,MAAM,CAACI,cAAR,GAA0BL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C;AAAtE,OAA1B;AACA,YAAMK,kBAAkB,GAAGrB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBkB,iBAApB,CAAvC;AACA,YAAME,aAAa,GAAG;AAClBpB,QAAAA,WAAW,EAAEmB,kBADK;AAElBlB,QAAAA,UAAU,EAAGQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAF/B,OAAtB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAQW,aAAR,CAAnB;AACA;;AACJ,SAAKvB,WAAW,CAACwB,eAAjB;AAAkC,aAAOvB,YAAY,CAACW,KAAD,EAAQ;AAACT,QAAAA,WAAW,EAAE;AACXI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADf;AAEXG,UAAAA,IAAI,EAAEG,MAAM,CAACV,WAAP,CAAmBO,IAFd;AAGXF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHhB;AAIXC,UAAAA,KAAK,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJf,SAAd;AAMDL,QAAAA,UAAU,EAAE,EANX;AAODC,QAAAA,KAAK,EAAE;AAPN,OAAR,CAAnB;AAUlC;;AACA,SAAKL,WAAW,CAACyB,wBAAjB;AAA2C,aAAOxB,YAAY,CAACW,KAAD,EAAO;AAACP,QAAAA,KAAK,EAAE;AAAR,OAAP,CAAnB;AAC3C;;AACA;AAAS,aAAOO,KAAP;AAhCb;AAkCH,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../utitlity'\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 50,\r\n    // loading : false,\r\n    error : false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 50,\r\n    cheese : 30,\r\n    bacon : 150,\r\n    meat : 200\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT: \r\n            const updateIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n            const updateIngredients = updateObject(state.ingredients, updateIngredient)\r\n            const updatedState = {\r\n                ingredients: updateIngredients,\r\n                totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   \r\n            }\r\n            return updateObject(state, updatedState) \r\n            // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] + 1},totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            const updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n            const updatedStates = {\r\n                ingredients: updatedIngredients,\r\n                totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]   \r\n            }\r\n            return updateObject(state, updatedStates) \r\n            // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] - 1},totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]}\r\n        case actionTypes.SET_INGREDIENTS: return updateObject(state, {ingredients: {\r\n                                                                        salad: action.ingredients.salad,\r\n                                                                        meat: action.ingredients.meat,\r\n                                                                        cheese: action.ingredients.cheese,\r\n                                                                        bacon: action.ingredients.bacon\r\n                                                                    },\r\n                                                                    totalPrice: 50,  \r\n                                                                    error: false\r\n                                                                }\r\n                                                            ) \r\n        // {...state,ingredients: {salad: action.ingredients.salad,meat: action.ingredients.meat,cheese: action.ingredients.cheese,bacon: action.ingredients.bacon},totalPrice: 50,  error: false}\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return updateObject(state,{error: true}) \r\n        // {...state,error: true}\r\n        default: return state \r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}