{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n  // state = {\n  //     orders : [],\n  //     loading : true\n  // }\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token); // axios.get('/orders.json')\n    //     .then(res => {\n    //         const fetchOrders =[];\n    //         for(let key in res.data) {\n    //             fetchOrders.push({\n    //                 ...res.data[key],\n    //                 id: key\n    //             })\n    //         }\n    //         this.setState({\n    //             loading:false,\n    //             orders:fetchOrders\n    //         })\n    //     })\n    //     .catch(err => {\n    //         this.setState({\n    //             loading:false\n    //         })\n    //     })\n  }\n\n  render() {\n    let orderLoading = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }\n    });\n\n    if (!this.props.loading) {\n      orderLoading = this.props.orders.map(order => /*#__PURE__*/React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: +order.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, orderLoading);\n  }\n\n}\n\nconst stateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: token => dispatch(actions.fetchOrders(token))\n  };\n};\n\nexport default connect(stateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","componentDidMount","props","onFetchOrders","token","render","orderLoading","loading","orders","map","order","id","ingredients","price","stateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA8B;AAE1B;AACA;AACA;AACA;AAEAQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,YAAY,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;;AAEA,QAAG,CAAC,KAAKJ,KAAL,CAAWK,OAAf,EAAuB;AACnBD,MAAAA,YAAY,GACR,KAAKJ,KAAL,CAAWM,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,iBACvB,oBAAC,KAAD;AACI,QAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,QAAA,WAAW,EAAED,KAAK,CAACE,WAFvB;AAGI,QAAA,KAAK,EAAE,CAACF,KAAK,CAACG,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AASH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,YADL,CADJ;AAKH;;AAjDyB;;AAoD9B,MAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC1B,SAAM;AACFP,IAAAA,MAAM,EAAEO,KAAK,CAACL,KAAN,CAAYF,MADlB;AAEFD,IAAAA,OAAO,EAAEQ,KAAK,CAACL,KAAN,CAAYH,OAFnB;AAGFH,IAAAA,KAAK,EAAEW,KAAK,CAACC,IAAN,CAAWZ;AAHhB,GAAN;AAKH,CAND;;AAQA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,aAAa,EAAGC,KAAD,IAAWc,QAAQ,CAACpB,OAAO,CAACqB,WAAR,CAAoBf,KAApB,CAAD;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACoB,YAAD,EAAcG,kBAAd,CAAP,CAA0CpB,gBAAgB,CAACG,MAAD,EAASJ,KAAT,CAA1D,CAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport {connect} from 'react-redux'\r\n\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component{\r\n\r\n    // state = {\r\n    //     orders : [],\r\n    //     loading : true\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token)\r\n        // axios.get('/orders.json')\r\n        //     .then(res => {\r\n        //         const fetchOrders =[];\r\n        //         for(let key in res.data) {\r\n        //             fetchOrders.push({\r\n        //                 ...res.data[key],\r\n        //                 id: key\r\n        //             })\r\n        //         }\r\n        //         this.setState({\r\n        //             loading:false,\r\n        //             orders:fetchOrders\r\n        //         })\r\n        //     })\r\n        //     .catch(err => {\r\n        //         this.setState({\r\n        //             loading:false\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        let orderLoading = <Spinner></Spinner>\r\n\r\n        if(!this.props.loading){\r\n            orderLoading = (\r\n                this.props.orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={+order.price}>\r\n                    </Order>\r\n                ))\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {orderLoading}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n    }\r\n}\r\n\r\nexport default connect(stateToProps,mapDispatchToProps) (withErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}