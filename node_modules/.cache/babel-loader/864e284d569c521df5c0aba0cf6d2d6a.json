{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Auxx/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport { object } from 'prop-types';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/burgerBuilder'; // import * as actionTypes from '../../store/actions/actionTypes'\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // ingredients : null,\n      // totalPrice : 100,\n      // purchasable: false,\n      purchasing: false // loading : false,\n      // error : false\n\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0); // this.setState({purchasable: sum > 0});\n\n      return sum > 0;\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //    const queryParams = [];\n      //     for(let i in this.props.ingredients){\n      //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]));\n      //     }\n      //     queryParams.push('price='+ this.props.totalPrice);\n      //     const queryString = queryParams.join('&');\n      //     this.props.history.push({\n      //         pathname : '/checkout',\n      //         search : '?' + queryString\n      //     })\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitIngredients(); // axios.get('https://react-burger-app-49b14.firebaseio.com/ingredients.json')\n    //     .then(response => {\n    //         this.setState({\n    //             ingredients : response.data\n    //         })\n    //     })\n    //     .catch(error => {\n    //         this.setState({\n    //             error :true\n    //         })\n    //     })\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 28\n        }\n      });\n    }\n\n    let burger = this.props.error ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, \" Ingredients can't be loaded!!!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 111\n      }\n    });\n\n    if (this.props.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo // purchasable={this.state.purchasable}\n        ,\n        purchasable: this.updatePurchaseState(this.props.ingredients),\n        order: this.purchaseHandler,\n        price: this.props.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.props.ingredients,\n        price: this.props.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinue: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 28\n        }\n      });\n    } // if(this.state.loading){\n    //     orderSummary = <Spinner/>\n    // }\n\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingredientName => dispatch(burgerBuilderActions.addIngredients(ingredientName)),\n    // {type: actionTypes.ADD_INGREDIENT,ingredientName: ingredientName}),\n    onIngredientRemoved: ingredientName => dispatch(burgerBuilderActions.removeIngredients(ingredientName)),\n    // {type: actionTypes.REMOVE_INGREDIENT,/ingredientName: ingredientName})\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","object","Modal","OrderSummary","axios","Spinner","withErrorHandler","burgerBuilderActions","BurgerBuilder","state","purchasing","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","componentDidMount","onInitIngredients","render","disabledInfo","key","orderSummary","loading","burger","error","textAlign","onIngredientAdded","onIngredientRemoved","totalPrice","mapStateToProps","mapDispatchToProps","dispatch","ingredientName","addIngredients","removeIngredients","initIngredients"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Aux from '../../hoc/Auxx/Aux'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport { object } from 'prop-types'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as burgerBuilderActions from '../../store/actions/burgerBuilder'\r\n// import * as actionTypes from '../../store/actions/actionTypes'\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        // ingredients : null,\r\n        // totalPrice : 100,\r\n        // purchasable: false,\r\n        purchasing : false,\r\n        // loading : false,\r\n        // error : false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients()\r\n        // axios.get('https://react-burger-app-49b14.firebaseio.com/ingredients.json')\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             ingredients : response.data\r\n        //         })\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({\r\n        //             error :true\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum,el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        // this.setState({purchasable: sum > 0});\r\n        return sum > 0;\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice =  this.state.totalPrice;\r\n    //     const newPrice = priceAddition + oldPrice;\r\n    //     this.setState({\r\n    //         totalPrice:newPrice,\r\n    //         ingredients:updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount - 1;\r\n    //     if(oldCount <= 0){\r\n    //         return\r\n    //     }\r\n\r\n    //     const updatedIngredients = {\r\n    //         ...this.props.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice =  this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({\r\n    //         totalPrice:newPrice,\r\n    //         ingredients:updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing : true\r\n        })\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing : false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n    //    const queryParams = [];\r\n    //     for(let i in this.props.ingredients){\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]));\r\n    //     }\r\n    //     queryParams.push('price='+ this.props.totalPrice);\r\n    //     const queryString = queryParams.join('&');\r\n\r\n    //     this.props.history.push({\r\n    //         pathname : '/checkout',\r\n    //         search : '?' + queryString\r\n    //     })\r\n        this.props.history.push('/checkout')\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ingredients\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner/>\r\n        }\r\n\r\n        let burger = this.props.error ? <p style={{textAlign:\"center\"}}> Ingredients can't be loaded!!!</p> : <Spinner/>\r\n\r\n        if(this.props.ingredients){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ingredients}/>\r\n                    <BuildControls\r\n                        ingredientAdded = {this.props.onIngredientAdded}\r\n                        ingredientRemoved = {this.props.onIngredientRemoved}\r\n                        disabled = {disabledInfo}\r\n                        // purchasable={this.state.purchasable}\r\n                        purchasable = {this.updatePurchaseState(this.props.ingredients)}\r\n                        order={this.purchaseHandler}\r\n                        price={this.props.totalPrice}/>\r\n                </Aux>\r\n            )\r\n            orderSummary = <OrderSummary \r\n            ingredients={this.props.ingredients}\r\n            price={this.props.totalPrice}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}/>;\r\n        }\r\n\r\n        // if(this.state.loading){\r\n        //     orderSummary = <Spinner/>\r\n        // }\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal \r\n                    show={this.state.purchasing} \r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.ingredients,\r\n        totalPrice: state.totalPrice,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingredientName) => dispatch(burgerBuilderActions.addIngredients(ingredientName)),\r\n            // {type: actionTypes.ADD_INGREDIENT,ingredientName: ingredientName}),\r\n        onIngredientRemoved: (ingredientName) => dispatch(burgerBuilderActions.removeIngredients(ingredientName)),\r\n            // {type: actionTypes.REMOVE_INGREDIENT,/ingredientName: ingredientName})\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}