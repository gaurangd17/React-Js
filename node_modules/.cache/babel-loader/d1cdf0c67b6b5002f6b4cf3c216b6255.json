{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utitlity';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 50,\n  // loading : false,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 50,\n  cheese: 30,\n  bacon: 150,\n  meat: 200\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredients(state, action);\n    // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] + 1},totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   }\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredients(state, action);\n    // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] - 1},totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]}\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n    // {...state,ingredients: {salad: action.ingredients.salad,meat: action.ingredients.meat,cheese: action.ingredients.cheese,bacon: action.ingredients.bacon},totalPrice: 50,  error: false}\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n    // {...state,error: true}\n\n    default:\n      return state;\n  }\n};\n\nconst addIngredients = (state, action) => {\n  const updateIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updateIngredients = updateObject(state.ingredients, updateIngredient);\n  const updatedState = {\n    ingredients: updateIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredients = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedStates = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedStates);\n};\n\nconst setIngredients = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      meat: action.ingredients.meat,\n      cheese: action.ingredients.cheese,\n      bacon: action.ingredients.bacon\n    },\n    totalPrice: 50,\n    error: false\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","bacon","meat","reducer","state","action","type","ADD_INGREDIENT","addIngredients","REMOVE_INGREDIENT","removeIngredients","SET_INGREDIENTS","setIngredients","FETCH_INGREDIENTS_FAILED","updateIngredient","ingredientName","updateIngredients","updatedState","updatedIngredient","updatedIngredients","updatedStates"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,aAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjB;AACAC,EAAAA,KAAK,EAAG,KAJS;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;AAQA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAG,EADc;AAEtBC,EAAAA,MAAM,EAAG,EAFa;AAGtBC,EAAAA,KAAK,EAAG,GAHc;AAItBC,EAAAA,IAAI,EAAG;AAJe,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,WAAW,CAACgB,cAAjB;AAAiC,aAAOC,cAAc,CAACJ,KAAD,EAAOC,MAAP,CAArB;AAC7B;;AACJ,SAAKd,WAAW,CAACkB,iBAAjB;AAAoC,aAAOC,iBAAiB,CAACN,KAAD,EAAQC,MAAR,CAAxB;AAChC;;AACJ,SAAKd,WAAW,CAACoB,eAAjB;AAAkC,aAAOC,cAAc,CAACR,KAAD,EAAQC,MAAR,CAArB;AAClC;;AACA,SAAKd,WAAW,CAACsB,wBAAjB;AAA2C,aAAOrB,YAAY,CAACY,KAAD,EAAO;AAACR,QAAAA,KAAK,EAAE;AAAR,OAAP,CAAnB;AAC3C;;AACA;AAAS,aAAOQ,KAAP;AATb;AAWH,CAZD;;AAcA,MAAMI,cAAc,GAAG,CAACJ,KAAD,EAAOC,MAAP,KAAkB;AACrC,QAAMS,gBAAgB,GAAG;AAAC,KAACT,MAAM,CAACU,cAAR,GAA0BX,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACU,cAAzB,IAA2C;AAAtE,GAAzB;AACA,QAAMC,iBAAiB,GAAGxB,YAAY,CAACY,KAAK,CAACV,WAAP,EAAoBoB,gBAApB,CAAtC;AACA,QAAMG,YAAY,GAAG;AACjBvB,IAAAA,WAAW,EAAEsB,iBADI;AAEjBrB,IAAAA,UAAU,EAAGS,KAAK,CAACT,UAAN,GAAmBG,iBAAiB,CAACO,MAAM,CAACU,cAAR;AAFhC,GAArB;AAIA,SAAOvB,YAAY,CAACY,KAAD,EAAQa,YAAR,CAAnB;AACH,CARD;;AAUA,MAAMP,iBAAiB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACzC,QAAMa,iBAAiB,GAAG;AAAC,KAACb,MAAM,CAACU,cAAR,GAA0BX,KAAK,CAACV,WAAN,CAAkBW,MAAM,CAACU,cAAzB,IAA2C;AAAtE,GAA1B;AACA,QAAMI,kBAAkB,GAAG3B,YAAY,CAACY,KAAK,CAACV,WAAP,EAAoBwB,iBAApB,CAAvC;AACA,QAAME,aAAa,GAAG;AAClB1B,IAAAA,WAAW,EAAEyB,kBADK;AAElBxB,IAAAA,UAAU,EAAGS,KAAK,CAACT,UAAN,GAAmBG,iBAAiB,CAACO,MAAM,CAACU,cAAR,CAF/B;AAGlBlB,IAAAA,QAAQ,EAAE;AAHQ,GAAtB;AAKA,SAAOL,YAAY,CAACY,KAAD,EAAQgB,aAAR,CAAnB;AACH,CATD;;AAWA,MAAMR,cAAc,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOb,YAAY,CAACY,KAAD,EAAQ;AACvBV,IAAAA,WAAW,EAAE;AACTK,MAAAA,KAAK,EAAEM,MAAM,CAACX,WAAP,CAAmBK,KADjB;AAETG,MAAAA,IAAI,EAAEG,MAAM,CAACX,WAAP,CAAmBQ,IAFhB;AAGTF,MAAAA,MAAM,EAAEK,MAAM,CAACX,WAAP,CAAmBM,MAHlB;AAITC,MAAAA,KAAK,EAAEI,MAAM,CAACX,WAAP,CAAmBO;AAJjB,KADU;AAMvBN,IAAAA,UAAU,EAAE,EANW;AAOvBC,IAAAA,KAAK,EAAE;AAPgB,GAAR,CAAnB;AAQD,CATH;;AAWA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../utitlity'\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 50,\r\n    // loading : false,\r\n    error : false,\r\n    building: false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 50,\r\n    cheese : 30,\r\n    bacon : 150,\r\n    meat : 200\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredients(state,action)\r\n            // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] + 1},totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   }\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredients(state, action)\r\n            // {...state, ingredients : {...state.ingredients,[action.ingredientName] : state.ingredients[action.ingredientName] - 1},totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]}\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\r\n        // {...state,ingredients: {salad: action.ingredients.salad,meat: action.ingredients.meat,cheese: action.ingredients.cheese,bacon: action.ingredients.bacon},totalPrice: 50,  error: false}\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return updateObject(state,{error: true}) \r\n        // {...state,error: true}\r\n        default: return state \r\n    }\r\n}\r\n\r\nconst addIngredients = (state,action) => {\r\n    const updateIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n    const updateIngredients = updateObject(state.ingredients, updateIngredient)\r\n    const updatedState = {\r\n        ingredients: updateIngredients,\r\n        totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]   \r\n    }\r\n    return updateObject(state, updatedState) \r\n}\r\n\r\nconst removeIngredients = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedStates = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true   \r\n    }\r\n    return updateObject(state, updatedStates) \r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            meat: action.ingredients.meat,\r\n            cheese: action.ingredients.cheese,\r\n            bacon: action.ingredients.bacon},\r\n        totalPrice: 50,  \r\n        error: false\r\n})}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}