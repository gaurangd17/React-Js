{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utitlity';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n    // {...action.orderData,id: action.orderId}\n    // {...state,purchased: true,loading: false,orders: state.orders.concat(newOrderData)}\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n    // {...state,loading: false}\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, {\n        loading: true\n      });\n    // {...state,loading: true}\n\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, {\n        purchased: false\n      });\n    // {...state,purchased: false}\n\n    case actionTypes.FETCH_ORDERS_START:\n      return updateObject(state, {\n        loading: true\n      });\n    // {...state,loading: true}\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return updateObject(state, {\n        orders: action.orders,\n        loading: false\n      });\n    // {...state,orders: action.orders,loading: false}\n\n    case actionTypes.FETCH_ORDERS_FAILED:\n      return updateObject(state, {\n        loading: false\n      });\n    // {...state,loading: false}\n\n    default:\n      return state;\n  }\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrderData = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    purchased: true,\n    loading: false,\n    orders: state.orders.concat(newOrderData)\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_BURGER_SUCCESS","purchaseBurgerSuccess","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED","newOrderData","orderData","id","orderId","concat"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,WAAW,CAACU,uBAAjB;AAA0C,aAAOC,qBAAqB,CAACJ,KAAD,EAAQC,MAAR,CAA5B;AACtC;AACA;;AACJ,SAAKR,WAAW,CAACY,oBAAjB;AAAuC,aAAOX,YAAY,CAACM,KAAD,EAAO;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAP,CAAnB;AACnC;;AACJ,SAAKJ,WAAW,CAACa,qBAAjB;AAAwC,aAAOZ,YAAY,CAACM,KAAD,EAAO;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAP,CAAnB;AACpC;;AACJ,SAAKJ,WAAW,CAACc,aAAjB;AAAgC,aAAOb,YAAY,CAACM,KAAD,EAAQ;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAR,CAAnB;AAChC;;AACA,SAAKL,WAAW,CAACe,kBAAjB;AAAqC,aAAOd,YAAY,CAACM,KAAD,EAAO;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAP,CAAnB;AACrC;;AACA,SAAKJ,WAAW,CAACgB,oBAAjB;AAAuC,aAAOf,YAAY,CAACM,KAAD,EAAQ;AAACJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAAhB;AACEC,QAAAA,OAAO,EAAE;AADX,OAAR,CAAnB;AAEvC;;AACA,SAAKJ,WAAW,CAACiB,mBAAjB;AAAsC,aAAOhB,YAAY,CAACM,KAAD,EAAO;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAP,CAAnB;AAClC;;AACJ;AAAS,aAAOG,KAAP;AAjBb;AAmBH,CApBD;;AAsBA,MAAMI,qBAAqB,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAMU,YAAY,GAAGjB,YAAY,CAACO,MAAM,CAACW,SAAR,EAAmB;AAACC,IAAAA,EAAE,EAAEZ,MAAM,CAACa;AAAZ,GAAnB,CAAjC;AACA,SAAOpB,YAAY,CAACM,KAAD,EAAO;AAAEF,IAAAA,SAAS,EAAE,IAAb;AACED,IAAAA,OAAO,EAAE,KADX;AAEED,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAamB,MAAb,CAAoBJ,YAApB;AAFV,GAAP,CAAnB;AAKH,CAPD;;AASA,eAAeZ,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../../shared/utitlity'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action)\r\n            // {...action.orderData,id: action.orderId}\r\n            // {...state,purchased: true,loading: false,orders: state.orders.concat(newOrderData)}\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return updateObject(state,{loading: false})\r\n            // {...state,loading: false}\r\n        case actionTypes.PURCHASE_BURGER_START: return updateObject(state,{loading: true})\r\n            // {...state,loading: true}\r\n        case actionTypes.PURCHASE_INIT: return updateObject(state, {purchased: false})\r\n        // {...state,purchased: false}\r\n        case actionTypes.FETCH_ORDERS_START: return updateObject(state,{loading:true})\r\n        // {...state,loading: true}\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return updateObject(state, {orders: action.orders,\r\n                                                                            loading: false})\r\n        // {...state,orders: action.orders,loading: false}\r\n        case actionTypes.FETCH_ORDERS_FAILED: return updateObject(state,{loading:false})\r\n            // {...state,loading: false}\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrderData = updateObject(action.orderData, {id: action.orderId})\r\n    return updateObject(state,{ purchased: true,\r\n                                loading: false,\r\n                                orders: state.orders.concat(newOrderData)\r\n                                }\r\n                        )\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}