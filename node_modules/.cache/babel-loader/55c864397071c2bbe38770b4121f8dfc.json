{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\React JS\\\\burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Auxx/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport { object } from 'prop-types';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions';\nconst INGREDIENT_PRICES = {\n  salad: 50,\n  cheese: 30,\n  bacon: 150,\n  meat: 200\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 100,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = priceAddition + oldPrice;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {// axios.get('https://react-burger-app-49b14.firebaseio.com/ingredients.json')\n    //     .then(response => {\n    //         this.setState({\n    //             ingredients : response.data\n    //         })\n    //     })\n    //     .catch(error => {\n    //         this.setState({\n    //             error :true\n    //         })\n    //     })\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 28\n        }\n      });\n    }\n\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }, \" Ingredients can't be loaded!!!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 111\n      }\n    });\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        order: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinue: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","object","Modal","OrderSummary","axios","Spinner","withErrorHandler","actionTypes","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","render","disabledInfo","key","orderSummary","burger","textAlign"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Aux from '../../hoc/Auxx/Aux'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport { object } from 'prop-types'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actionTypes from '../../store/actions'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 50,\r\n    cheese : 30,\r\n    bacon : 150,\r\n    meat : 200\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients : null,\r\n        totalPrice : 100,\r\n        purchasable: false,\r\n        purchasing : false,\r\n        loading : false,\r\n        error : false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // axios.get('https://react-burger-app-49b14.firebaseio.com/ingredients.json')\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             ingredients : response.data\r\n        //         })\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({\r\n        //             error :true\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum,el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice =  this.state.totalPrice;\r\n        const newPrice = priceAddition + oldPrice;\r\n        this.setState({\r\n            totalPrice:newPrice,\r\n            ingredients:updatedIngredients\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount - 1;\r\n        if(oldCount <= 0){\r\n            return\r\n        }\r\n\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice =  this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            totalPrice:newPrice,\r\n            ingredients:updatedIngredients\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing : true\r\n        })\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing : false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n       const queryParams = [];\r\n        for(let i in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price='+ this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n\r\n        this.props.history.push({\r\n            pathname : '/checkout',\r\n            search : '?' + queryString\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner/>\r\n        }\r\n\r\n        let burger = this.state.error ? <p style={{textAlign:\"center\"}}> Ingredients can't be loaded!!!</p> : <Spinner/>\r\n\r\n        if(this.state.ingredients){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients}/>\r\n                    <BuildControls\r\n                        ingredientAdded = {this.addIngredientHandler}\r\n                        ingredientRemoved = {this.removeIngredientHandler}\r\n                        disabled = {disabledInfo}\r\n                        purchasable={this.state.purchasable}\r\n                        order={this.purchaseHandler}\r\n                        price={this.state.totalPrice}/>\r\n                </Aux>\r\n            )\r\n            orderSummary = <OrderSummary \r\n            ingredients={this.state.ingredients}\r\n            price={this.state.totalPrice}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}/>;\r\n        }\r\n\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner/>\r\n        }\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal \r\n                    show={this.state.purchasing} \r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);"]},"metadata":{},"sourceType":"module"}