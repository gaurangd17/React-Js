{"ast":null,"code":"import axios from'axios';import*as actionTypes from'./actionTypes';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(idToken,localId){return{type:actionTypes.AUTH_SUCCESS,userId:localId,token:idToken};};export var authFail=function authFail(err){return{type:actionTypes.AUTH_FAIL,errror:err};};export var logout=function logout(){localStorage.removeItem('token');localStorage.removeItem('expirationDate');localStorage.removeItem('userId');return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var auth=function auth(emailId,pass,isSignup){return function(dispatch){dispatch(authStart());var authData={email:emailId,password:pass,returnSecureToken:true};var url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyADqcJ2Kga3SLu51fbcD-XN2a4uMLbA9LE';if(!isSignup){url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyADqcJ2Kga3SLu51fbcD-XN2a4uMLbA9LE';}axios.post(url,authData).then(function(response){console.log(response);var expirationDate=new Date(new Date().getTime()+response.data.expiresIn*1000);localStorage.setItem('token',response.data.idToken);localStorage.setItem('expirationDate',expirationDate);localStorage.setItem('userId',response.data.localId);dispatch(authSuccess(response.data.idToken,response.data.localId));dispatch(checkAuthTimeout(response.data.expiresIn));}).catch(function(err){console.log(err);dispatch(authFail(err.response.data.error));});};};export var setAuthRedirectPath=function setAuthRedirectPath(path){return{type:actionTypes.SET_AUTH_REDIRECT_PATH,path:path};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem('token');if(!token){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate>new Date()){var userId=localStorage.getItem('userId');dispatch(authSuccess(token,userId));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}else{dispatch(logout());}}};};","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","idToken","localId","AUTH_SUCCESS","userId","token","authFail","err","AUTH_FAIL","errror","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","emailId","pass","isSignup","authData","email","password","returnSecureToken","url","post","then","response","console","log","expirationDate","Date","getTime","data","expiresIn","setItem","catch","error","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nimport * as actionTypes from './actionTypes'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (idToken, localId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        userId: localId, \r\n        token: idToken\r\n    }\r\n}\r\n\r\nexport const authFail = (err) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        errror: err\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const auth = (emailId, pass, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        \r\n        const authData = {\r\n            email: emailId,\r\n            password: pass,\r\n            returnSecureToken: true\r\n        }; \r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyADqcJ2Kga3SLu51fbcD-XN2a4uMLbA9LE';\r\n\r\n        if(!isSignup){\r\n            url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyADqcJ2Kga3SLu51fbcD-XN2a4uMLbA9LE';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response)\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n                localStorage.setItem('token', response.data.idToken)\r\n                localStorage.setItem('expirationDate', expirationDate)\r\n                localStorage.setItem('userId', response.data.localId)\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId))\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(authFail(err.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token){\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate > new Date()){\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token,userId))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            } else {\r\n                dispatch(logout())\r\n            }\r\n            \r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}