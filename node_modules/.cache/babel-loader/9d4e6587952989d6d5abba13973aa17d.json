{"ast":null,"code":"export const updateObject = (oldObject, updatedProps) => {\n  return { ...oldObject,\n    ...updatedProps\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["D:/Workspace/React JS/burger-app/src/shared/utitlity.js"],"names":["updateObject","oldObject","updatedProps","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA4B;AACpD,SAAM,EACF,GAAGD,SADD;AAEF,OAAGC;AAFD,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAC7B;AACI,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAGD,KAAK,CAACE,QAAT,EAAkB;AACdD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACH;;AAED,MAAGD,KAAK,CAACI,SAAT,EAAoB;AAChBH,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACH;;AAED,MAAGD,KAAK,CAACM,SAAT,EAAoB;AAChBL,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACH;;AAED,MAAID,KAAK,CAACO,OAAV,EAAmB;AACf,UAAMC,OAAO,GAAG,uIAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,MAAID,KAAK,CAACU,SAAV,EAAqB;AACjB,UAAMF,OAAO,GAAG,OAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,SAAOA,OAAP;AACH,CA3BM","sourcesContent":["export const updateObject = (oldObject, updatedProps) =>{\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProps\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => \r\n{\r\n    let isValid = true\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if(rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if(rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}"]},"metadata":{},"sourceType":"module"}